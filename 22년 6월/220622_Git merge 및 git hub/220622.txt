git init manual2
cd manual2
vi work.txt 
-> 1내용 추가
git add work.txt
git commit -m 'work 1'
git status

git branch o2

vi master.txt
git add master.txt
git commit -m 'master work 2'

git checkout o2
vi o2.txt -> o2 2 입력	

git checkout main
git merge o2 
-> o2 랑 병합
	
병합할려는 것이 동일한 파일이름이면 merge 하고 나면 나오는 텍스트 문서에서
어떤걸 남길지가 나옴
그러고 commit 해서 수정본을 저장하면됌

# branch 삭제
git branch -d 브랜치명


237  git branch test
  238  git branch test2
  239  git checkout test
  240  cat > test.txt
  241  ls
  242  git remote -v
  243  git remote add origin https://github.com/jaeyeon1361/TEST123.git
  244  git remote -v
  245  git push -u
  246  git push -u origin test
-> 내가 설정한 github 주소한테 파일을 보냄
  249  git checkout test2
  251  cat > three.txt
  253  ls
  254  git push -u origin test2
  255  git add three.txt
  256  git commit -m 'test3'
  257  git push -u origin test2
  258  history

git init 폴더명
cd 폴더명
git add 파일명
git commit -m 'work 1'
git status
git remote add <서버이름> github주소
git push origin master
git branch <브랜치명>
git checkout <브랜치명>

git remote -v 
-> 연결이 잘 됐는지 여부

## git hub
1. 진행할 프로젝트명 : test <폴더설정>
git init test
cd test
vi test.txt
=> cat > test.txt
안녕하세요. 공유를 위한 텍스트입니다.
git branch (브랜치1)
git branch (브랜치2)
git branch (브랜치3)
git add test.txt
git commit -m 'jaeyeon_test_2206231015'
-git hub에 반영되는 것이 commit 명이라서 날짜나 시간으로 통일하면 좋을 것 같아요
git remote add <서버이름> github SSH URL 
git remote -v
- 서버 등록 잘 됐는지 확인
git push <서버이름>
github에 정상 반영됐는지 확인 후 팀원들에게 전파

2. github 공유
cd ~
git clone github SSH URL <폴더명>
git checkout <브랜치명>
- 자신이 작업할? 브랜치로 이해하면 될 듯
작업 완료 후 git push로 업데이트

3. 그걸 종합하고 다시 pull로 받고 수정 반복

유용한 명령어?
git show -> 전 파일이랑 뭐가 달라졌는지 확인 가능 
history -> 본인이 지금까지 한 명령어 다 볼 수 있음
참고로 history | grep <찾을내용> 하면 어떤 명령어 썼었는지 볼 수 있습니다.

## github SSH 설정
cd ~
홈디텍토리 에서
ssh-keygen
cd .ssh/
$ ls -al
id_rsa -> 개인 키  
id_rsa.pub ->
github 메인에서 setting -> SSH and GPG keys 접속 SSH keys 에다가 
cat id_rsa.pub 에서 나온거 복사 붙여넣기
새로운 git 생성 후 접속 방법 ssh로 설정
git remote add origin-ssh git@github.com:jaeyeon1361/gitgit.git
git remote -v
git push origin-ssh main
yes
github code 선택 -> 파일반영 확인


## github clone (github 전체복사)
cd ~ 
git clone git@github.com:jaeyeon1361/TEST123.git git_office
-> git clone ssh의 github 주소 앞으로 작업 진행할 폴더 명

## git hub folder 삭제
git rm -rf <삭제폴더>
git commit -m 'delete'
git push
깃허브에서 폴더 삭제된 것 확인


서버에 repository(폴더) 생성 ->manual
local의 manual의 자료를 서버에 push
서버의 자료를 한꺼번에 복제 : clone 로컬의 디렉토리는 manual_home
서버의 자료를 한꺼번에 복제 : clone 로컬의 디렉토리는 manual_office

## github 삭제
해당 github 접속 후 setting 접속 -> 맨밑에 내려가서 delete
누르면 지울꺼냐고 물어보는데 중간에 jaeyeon1361/TEST-README 이런식으로 있는데
복사 붙여넣기 하면 delete 활성화됌

## git hub 파일 받아오기
git clone <추가> <프로젝트 파일명 ex)jaeyeon_project>
cd jaeyeon_project
여기서 있는 파일들 수정진행
vi jaeyeon_test.txt
cat jaeyeon_test.txt
git add jaeyeon_test.txt
git commit -m 'jaeyeon_test'
git push -> 팀장님 프로젝트 수정한거 git hub에 올렸어요
팀장님曰 수정한거 반영했어요
git pull

